---
# Java settings
java_version: "21"
java_package: "java-21-openjdk-devel"

# Tomcat settings
tomcat_version: "9.0.71"
tomcat_user: "tomcat"
tomcat_group: "tomcat"
tomcat_home: "/opt/tomcat"
tomcat_conf: "/etc/tomcat/conf"
tomcat_port: 8080
tomcat_admin_username: "admin"
tomcat_admin_password: "admin_password"  # Change this in production

# SQLCL settings
sqlcl_version: "latest"
sqlcl_url: "https://download.oracle.com/otn_software/java/sqldeveloper/sqlcl-{{ sqlcl_version }}.zip"
sqlcl_install_dir: "/opt/sqlcl"
sqlcl_user: "opc"
sqlcl_group: "opc"

# Oracle ORDS settings
ords_version: "latest"
ords_url: "https://download.oracle.com/otn_software/java/ords/ords-{{ ords_version }}.zip"
ords_install_dir: "/opt/ords"
ords_config_dir: "/etc/ords"
ords_port: 8888

# Runtime configuration (these will be set during provisioning)
db_port: "{{ db_port }}"
db_hostname: "{{ db_hostname }}"
db_servicename: "{{ db_servicename }}"
db_user: "{{ db_user }}"
db_sys_password: "{{ db_sys_password }}"


#############

---
# Java settings (version passed from Packer)
# java_home: "/usr/java/jdk-{{ java_version }}"
# java_install_devel: false  # Set to false if you only want headless version

# APEX settings (version passed from Packer)
apex_zip_url: "https://download.oracle.com/otn_software/apex/apex_{{ apex_version }}_en.zip"
apex_version: "24.1"

# Firewall settings for load balancer environment
allowed_ports:
  - "22/tcp"    # SSH
  - "8080/tcp"  # HTTP only - TLS terminated at load balancer
  # Remove 8443/tcp as it's not needed

# Load balancer settings
behind_load_balancer: true
ssl_enabled: false  # No SSL on backend when LB terminates TLS

# Base image settings
configure_at_runtime: true
install_only: true  # Don't configure services during image build


# Environment variable with command parameter override support
# Usage: ansible-playbook -e env=prod site.yml
# Or set ANSIBLE_ENV environment variable: ANSIBLE_ENV=prod ansible-playbook site.yml
# env: "{{ lookup('env', 'ANSIBLE_ENV') | default('test') }}"

